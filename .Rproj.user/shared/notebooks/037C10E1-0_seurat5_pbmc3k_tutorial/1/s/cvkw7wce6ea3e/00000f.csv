"0","# If you haven't installed UMAP, you can do so via reticulate::py_install(packages = ""umap-learn"")"
"0","pbmc <- RunUMAP(pbmc, dims = 1:10)"
"2","G2;H2;Warningh: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric
To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'
This message will be shown once per sessiong
"
"2","G3;13:42:14 UMAP embedding parameters a = 0.9922 b = 1.112
g"
"2","G3;13:42:14 Read 2638 rows and found 10 numeric columns
g"
"2","G3;13:42:14 Using Annoy for neighbor search, n_neighbors = 30
g"
"2","G3;13:42:14 Building Annoy index with metric = cosine, n_trees = 50
g"
"2","G3;0%   10   20   30   40   50   60   70   80   90   100%
g"
"2","G3;[----|----|----|----|----|----|----|----|----|----|
g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;*g"
"2","G3;|
g"
"2","G3;13:42:14 Writing NN index file to temp file C:\Users\myj23\AppData\Local\Temp\RtmpWQtKwv\file39c87598e13
g"
"2","G3;13:42:14 Searching Annoy index using 1 thread, search_k = 3000
g"
"2","G3;13:42:15 Annoy recall = 100%
g"
"2","G3;13:42:15 Commencing smooth kNN distance calibration using 1 threadg"
"2","G3; with target n_neighbors = 30
g"
"2","G3;13:42:15 Initializing from normalized Laplacian + noise (using RSpectra)
g"
"2","G3;13:42:15 Commencing optimization for 500 epochs, with 106310 positive edges
g"
"2","G3;13:42:15 Using rng type: pcg
g"
"2","Using method 'umap'
0%   10   20   30   40   50   60   70   80   90   100%
[----|----|----|----|----|----|----|----|----|----|
"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*"
"2","*|
"
"2","G3;13:42:21 Optimization finished
g"
